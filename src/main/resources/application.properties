server.port=8012
server.servlet.context-path=/
server.tomcat.uri-encoding=UTF-8

# mybatis
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:mapper/*.xml

# db 01
spring.datasource.data01.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.data01.url=jdbc:mysql://192.168.179.128:3306/TEST?characterEncoding=utf-8&useSSL=false
spring.datasource.data01.username=root
spring.datasource.data01.password=mynewPass4!
spring.datasource.data01.driverClassName=com.mysql.jdbc.Driver
spring.datasource.data01.initialSize=5
spring.datasource.data01.minIdle=5
spring.datasource.data01.maxActive=20
spring.datasource.data01.maxWait=60000
spring.datasource.data01.timeBetweenEvictionRunsMillis=60000
spring.datasource.data01.minEvictableIdleTimeMillis=300000
spring.datasource.data01.validationQuery=SELECT 1 FROM DUAL
spring.datasource.data01.testWhileIdle=true
spring.datasource.data01.testOnBorrow=false
spring.datasource.data01.testOnReturn=false
spring.datasource.data01.poolPreparedStatements=true
spring.datasource.data01.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.data01.filters=stat,wall,log4j
spring.datasource.data01.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000



# db  02
spring.datasource.data02.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.data02.url=jdbc:mysql://192.168.179.128:3306/awa?characterEncoding=utf-8&useSSL=false
spring.datasource.data02.username=root
spring.datasource.data02.password=mynewPass4!
spring.datasource.data02.driverClassName=com.mysql.jdbc.Driver
spring.datasource.data02.initialSize=5
spring.datasource.data02.minIdle=5
spring.datasource.data02.maxActive=20
spring.datasource.data02.maxWait=60000
spring.datasource.data02.timeBetweenEvictionRunsMillis=60000
spring.datasource.data02.minEvictableIdleTimeMillis=300000
spring.datasource.data02.validationQuery=SELECT 1 FROM DUAL
spring.datasource.data02.testWhileIdle=true
spring.datasource.data02.testOnBorrow=false
spring.datasource.data02.testOnReturn=false
spring.datasource.data02.poolPreparedStatements=true
spring.datasource.data02.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.data02.filters=stat,wall,log4j
spring.datasource.data02.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000





#分表分库

spring.shardingsphere.datasource.names=TEST

#spring.shardingsphere.datasource.TEST.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.TEST.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.TEST.url=jdbc:mysql://192.168.179.128:3306/TEST?characterEncoding=utf-8&useSSL=false
#spring.shardingsphere.datasource.TEST.username=root
#spring.shardingsphere.datasource.TEST.password=mynewPass4!


#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=TEST$->{user_id % 2}

#spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=TEST.t_user_0$->{0..1}
#spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user_0$->{user_id % 2}

#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}












